@inject NavigationManager nav
@inject PageHistoryState PageHistoryState

@if (!state.isGuest)
{
    <div class="page-header">
        <div class="btn-container">
            <button class="btn btn-round btn-back" @onclick="GoBack"><i class="bi bi-chevron-left"></i></button>
        </div>
        <h4>@PageTitle</h4>
        <div class="btn-container">
            <a class="btn btn-round btn-event" type="button" data-bs-toggle="modal" href="#addToTripModalToggle" role="button"><i class="bi bi-plus-lg"></i></a>
            <button class="btn btn-round btn-event" type="button" @onclick="bookmark"><i class="bi @bookmarkIcon"></i></button>
        </div>
    </div>
}
else
{
    <div class="page-header">
        <div class="btn-container">
            <button class="btn btn-round btn-back" @onclick="GoBack"><i class="bi bi-chevron-left"></i></button>
        </div>
        <h4>@PageTitle</h4>
        <div class="btn-container">
            <button class="btn btn-round btn-event" type="button" disabled><i class="bi bi-plus-lg"></i></button>
            <button class="btn btn-round btn-event" type="button" @onclick="bookmark" disabled><i class="bi @bookmarkIcon"></i></button>
        </div>
    </div>
}

@code {
    [CascadingParameter]
    public StateModel state { get; set; }

    [CascadingParameter]
    public UserModel user { get; set; }

    [Parameter]
    public string PageTitle { get; set; }

    [Parameter]
    public Event TargetEvent { get; set; }

    int bkIndex { get; set; }

    private bool bookmarked;
    private string bookmarkIcon = "bi-bookmark";

    protected override void OnInitialized()
    {
        state.OnSearch = false;
        bkIndex = user.Bookmarks.FindIndex(place => place.id == TargetEvent.id);
        if (bkIndex != -1)
        {
            bookmarked = true;
        }

        if (bookmarked)
        {
            bookmarkIcon = "bi-bookmark-fill";
        }
        else
        {
            bookmarkIcon = "bi-bookmark";
        }
    }

    private void bookmark()
    {
        bookmarked = !bookmarked;
        if (bookmarked)
        {
            bookmarkIcon = "bi-bookmark-fill";
        }
        else
        {
            bookmarkIcon = "bi-bookmark";
        }
        bkIndex = user.Bookmarks.FindIndex(place => place.id == TargetEvent.id);
        Console.WriteLine(bkIndex);
        if (bkIndex == -1)
        {
            user.Bookmarks.Add(TargetEvent);
        }
        else
        {
            user.Bookmarks.RemoveAt(bkIndex);
        }
    }

    private Trip newtrip = new Trip();

    private void ValidateTripCreation()
    {
        Plan planToAdd = new Plan();
        planToAdd.Name = TargetEvent.Name;
        planToAdd.Address = TargetEvent.Address;
        planToAdd.Date = TargetEvent.Date;
        planToAdd.Start = TargetEvent.StartTime;
        planToAdd.End = TargetEvent.EndTime;
        newtrip.Plans.Add(planToAdd);
        user.Trips.Add(newtrip);
        newtrip = new Trip();
    }

    private void AddToExistingTrip() { }

    private void AddToExistingTrip(Trip targetTrip)
    {
        Plan planToAdd = new Plan();
        planToAdd.Name = TargetEvent.Name;
        planToAdd.Address = TargetEvent.Address;
        planToAdd.Date = TargetEvent.Date;
        planToAdd.Start = TargetEvent.StartTime;
        planToAdd.End = TargetEvent.EndTime;
        int tripIndex = user.Trips.FindIndex(trip => trip.Name == targetTrip.Name);
        user.Trips[tripIndex].Plans.Add(planToAdd);
    }

    private void GoBack()
    {
        @if (PageHistoryState.CanGoBack())
        {
            string backPage = PageHistoryState.GetGoBackPage();
            nav.NavigateTo(backPage);
        }
    }
}

<!-- 2 Modal -->
<div class="modal fade" id="addToTripModalToggle" aria-hidden="true" aria-labelledby="addToTripModalToggleLabel" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-end">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="btn btn-setting" data-bs-target="#existingTrips" data-bs-toggle="modal">Existing Trips</button>
                <hr />
                <button type="button" class="btn btn-setting" data-bs-target="#newTrip" data-bs-toggle="modal">Create a New Trip</button>
                <hr />
                <hr />
                <button type="button" class="btn btn-setting btn-cancel" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="existingTrips" aria-hidden="true" aria-labelledby="existingTripsLabel" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-end">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="btn btn-setting" data-bs-target="#tripConflict" data-bs-toggle="modal">Conflict Trip</button>
                <hr />
                <button type="button" class="btn btn-setting" data-bs-target="#tripSuccess" data-bs-toggle="modal" @onclick="() => AddToExistingTrip()">Success Trip</button>
                <hr />

                @if (user.Trips.Count > 0)
                {
                    @foreach (Trip trip in user.Trips)
                    {
                        <button type="button" class="btn btn-setting" data-bs-target="#tripSuccess" data-bs-toggle="modal" @onclick="() => AddToExistingTrip(trip)">trip.Name</button>
                        <hr />
                    }
                }
                <hr />
                <button type="button" class="btn btn-setting btn-cancel" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="newTrip" aria-hidden="true" aria-labelledby="newTripLabel" tabindex="-1">
    <div id="modal-center" class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-background">
            <div class="modal-body">
                <div class="trip-form">
                    <h5 class="create-option">Create a New Trip</h5>
                    <div class="form-floating mt-3 mb-3">
                        <input @bind="newtrip.Name" class="form-control" id="tripName" placeholder="Happy Trip" />
                        <label for="tripName">Trip Name</label>
                    </div>
                    <div class="form-controls modal-footer">
                        <button type="button" class="btn btn-close-variant btn-outline-dark" data-bs-dismiss="modal" aria-label="Close">Close</button>
                        <button type="button" class="btn btn-save" data-bs-target="#tripSuccess" data-bs-toggle="modal" @onclick="ValidateTripCreation">Create & Add to Trip</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="tripConflict" aria-hidden="true" aria-labelledby="tripConflictLabel" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content ">
            <div class="modal-body modal-info fw-bold" style="color: #f5ad03; padding-bottom: 1.5rem;">
                <i class="bi bi-x-circle"></i>
                Event timing conflicts with current Trip Plan.
                Please try to rearrange your trip so that this event would not conflict with the other plans.
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="tripSuccess" aria-hidden="true" aria-labelledby="tripSuccessLabel" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-center" style="margin: 2rem;">
        <div class="modal-content">
            <div class="modal-body modal-info">
                <i class="bi bi-check-circle"></i>
            </div>
        </div>
    </div>
</div>