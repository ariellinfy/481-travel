@inject NavigationManager nav

<div class="card amenity-container" @onclick="GoToPage">
    <div class="description">
        <h5>@TargetAmenity.Name</h5>
        <h6>@TargetAmenity.Address</h6>
        <div class="tag-container">
            @if (TargetAmenity != null)
            {
                @for (int x = 0; x < 3; x++)
                {
                    <Tag TagName="@TargetAmenity.Tags[x]" />
                }
            }
        </div>
    </div>
    <div class="amenity-img">
        <img class="card-img-top" src="@TargetAmenity.ImgUrl" alt="@TargetAmenity.Name">
    </div>
</div>

<div class="btn-container">
    <button class="btn-search" type="button" @onclick="addPlan"><i class="bi bi-plus-lg"></i></button>
    <button class="btn-search" type="button" @onclick="bookmark"><i class="bi @bookmarkIcon"></i></button>
</div>

@code {
    [Parameter]
    public Amenity TargetAmenity { get; set; }

    public bool bookmarked = false; // depending on user
    private string bookmarkIcon = "bi-bookmark";

    [Parameter]
    public EventCallback<int> UnbookmarkItem { get; set; }

    void Unbookmark()
    {
        UnbookmarkItem.InvokeAsync();
    }

    private void bookmark()
    {
        bookmarked = !bookmarked;
        if (bookmarked) bookmarkIcon = "bi-bookmark-fill";
        else bookmarkIcon = "bi-bookmark";
    }

    private void addPlan()
    {
        // need to implement
    }

    public void GoToPage()
    {
        string placeUrl = "\\amenity\\" + TargetAmenity.id;
        nav.NavigateTo(placeUrl);
    }
}