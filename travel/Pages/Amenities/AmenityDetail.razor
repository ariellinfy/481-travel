@page "/amenity"
@page "/amenity/{id:int}"
@layout MainLayout
@inject HttpClient Http
@inject NavigationManager nav

<PlaceHeader PageTitle="Amenity" TargetAmenity="@TargetPlace" />

<img class="images-amenity" src="@TargetPlace.ImgUrl" alt="@TargetPlace.Name" style="width:100%;">

<div class="place-detail">
    <PlaceInfo TargetPlace="@TargetPlace" />

    <div class="reviews">
        <nav class="navbar navbar-expand-lg navbar-light review-header">
            <h5 style="margin-bottom: 0;">Reviews</h5>
            <a href="/addreview" class="btn add-review">
                <i class="bi bi-pencil"></i>
                Write a review
            </a>
        </nav>
        <div class="review-body">
            @if (TargetPlace.Reviews != null)
            {
                @foreach (var review in TargetPlace.Reviews)
                {
                    <AmenityDetailReviewCard User="@review.user" PublishedOn="@review.PublishedDate" Rate="@review.rating" ReviewContent="@review.review" />
                    <hr />
                }
            }
            <p class="show-more">Show More</p>
        </div>
    </div>

    <h4>Similar Places</h4>

    <div class="list-container">
        @foreach (var similarPlace in similarPlaces)
        {
            <AmenityCard amenityId="@similarPlace.id" imgUrl="@similarPlace.ImgUrl"
                     amenityName="@similarPlace.Name" amenityAddress="@similarPlace.Address" />
        }
    </div>
</div>

@code {
    [CascadingParameter]
    public StateModel state { get; set; }

    private List<int> similarPlacesId = new List<int> { };
    private List<Amenity> similarPlaces = new List<Amenity> { };

    public Amenity TargetPlace { get; set; }

    [Parameter]
    public int id { get; set; }

    protected override void OnInitialized()
    {
        state.OnTab = 2;
        TargetPlace = state.AllAmenities[id];

        if (TargetPlace.Similar != null)
        {
            for (int i = 0; i < TargetPlace.Similar.Count; i++)
            {
                similarPlaces.Add(state.AllAmenities[Int32.Parse(TargetPlace.Similar[i])]);
            }
        }
    }
}