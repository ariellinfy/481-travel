@page "/reviews"
@layout PageLayout
@inject PageHistoryState PageHistoryState

<AuthorizeView>
    <Authorized>
        <PageHeader pageTitle="Reviews" />
        <hr>
        <div class="page-body">
            @if (user.Reviews != null && user.Reviews.Count > 0)
            {
                @foreach (Review review in user.Reviews)
                {
                    <ReviewCard ReviewItem="review"/>
                }
            }
            else
            {
                <div class="empty-result">
                    You haven't written any review yet.
                </div>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <div style="width: 100%; height: 100%; align-items: center; justify-content: center; padding: 3rem; display: flex; flex-direction: column; gap: 2rem;">
            <a href="/signup" class="btn btn-secondary-filled btn-larger-font">
                Sign Up
            </a>
            <a href="/login" class="btn btn-primary-filled btn-larger-font">
                Login
            </a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public StateModel state { get; set; }

    [CascadingParameter]
    public UserModel user { get; set; }

    protected override void OnInitialized()
    {
        PageHistoryState.AddPageToHistory("/reviews");
        base.OnInitialized();
    }

    //void EditCallback(int index)
    //{
    //    user.Reviews.RemoveAt(index);
    //}
}